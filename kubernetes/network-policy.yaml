# kubernetes/network-policy.yaml
# Network policies for security and isolation

---
# Default deny all ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: microservices
spec:
  podSelector: {}
  policyTypes:
  - Ingress

---
# Allow User Service to connect to User DB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: user-service-to-db
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: user-db
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: user-service
    ports:
    - protocol: TCP
      port: 27017

---
# Allow Product Service to connect to Product DB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: product-service-to-db
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: product-db
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: product-service
    ports:
    - protocol: TCP
      port: 27017

---
# Allow Order Service to connect to Order DB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: order-service-to-db
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: order-db
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 27017

---
# Allow Order Service to call User and Product services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: order-to-other-services
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: user-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 3001

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: order-to-product-service
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: product-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: order-service
    ports:
    - protocol: TCP
      port: 3002

---
# Allow Ingress to reach all services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-to-services
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: user-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3001

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-to-product
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: product-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3002

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-to-order
  namespace: microservices
spec:
  podSelector:
    matchLabels:
      app: order-service
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3003O

